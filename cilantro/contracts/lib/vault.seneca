# do not delete the comment below. it is necessary for unit tests.
# UNITTEST_FLAG_CURRENCY_SENECA 1729

import seneca.storage.tabular as st
import seneca.crypto as crypto
import seneca.runtime as rt
import seneca.types as std
from seneca.modulelib import export, make_exports

import token

vaults = st.create_table('vaults', [
    ('owner', st.str_len(200), True),
    ('amount', int),
])

operators = st.create_table('operators', [
    ('vault', st.str_len(200)),
    ('operator', st.str_len(200)),
])

@export
def create_vault(amount):
    # make sure they don't already have a vault
    sender_vault = vaults.select().where(vaults.owner == rt.sender).run()
    assert not sender_vault

    # transfer tokens from them to the new vault
    token.transfer_from(rt.sender, this, amount)

    vaults.insert([{
        'owner': rt.sender,
        'amount': amount
    }]).run()

@export
def add_to_vault(owner, amount):
    owner_vault = vaults.select().where(vaults.owner == owner).run()
    assert owner_vault

    token.transfer_from(rt.sender, this, amount)

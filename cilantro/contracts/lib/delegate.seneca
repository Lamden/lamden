import seneca.storage.tabular as st
import seneca.storage.kv as kv
import seneca.crypto as crypto
import seneca.runtime as rt
import seneca.stdlib as std
from seneca.modulelib import export, make_exports
import currency
import delegate_stake_amount

t_delegatees = st.create_table('delegate', [
    ('delegate_id', st.str_len(30), True)
])
STAKE_DURATION = std.timedelta(days=30)
kv_policy = kv.create_kv('constants')

@export
def stake():
    sender_id = rt.global_run_data.author
    stake_amount = delegate_stake_amount.get()
    currency.lock_coins(stake_amount, STAKE_DURATION)
    t_delegatees.insert([
        {'delegate_id': sender_id}
    ]).run()

@export
def unstake():
    sender_id = rt.global_run_data.author
    currency.unlock_coins()

@export
def is_delegate(wallet_id=None):
    if not wallet_id:
        wallet_id = rt.global_run_data.author
    return t_delegatees.select().where(t_delegatees.delegate_id == wallet_id).run()

@export
def get_vks():
    return t_delegatees.select().run()

exports = make_exports()
